---
  - name: Install bind9
    apt:
      name:
        - bind9
        - python3-dnspython
      state: latest

  - name: Start bind9
    service:
        name: bind9
        state: started
        enabled: yes

  - name: move bind9 conf
    template:
      src: named.conf.options.j2
      dest: /etc/bind/named.conf.options
    no_log: true
    notify: Restart bind9 service

  - name: move db conf
    when: inventory_hostname in groups['dns_master']
    template:
      src: db.odns.j2
      dest: /var/cache/bind/db.odns.io
      force: no
    notify: restart bind with rndc

  - name: Add db configuration reversed
    when: inventory_hostname in groups['dns_master']
    template:
      src: db.odns.reversed.j2
      dest: /var/cache/bind/db.odns.reversed
      force: no
    notify: restart bind with rndc

  - name: move conf.local
    template:
      src: named.conf.local.j2
      dest: /etc/bind/named.conf.local
    notify: Restart bind9 service

  - name: Execute handlers
    meta: flush_handlers

  - name: Add A records
    when: inventory_hostname == groups['dns_master'][0]
    community.general.nsupdate:
      key_name: "dns_update_key"
      key_algorithm: "hmac-sha256"
      key_secret: "{{ dns_update_key }}"
      server: "localhost"
      zone: "{{ zone }}."
      record: "{{ item.key }}.{{ zone }}."
      type: "A"
      value: "{{ item.value }}"
    loop: "{{ a_records | dict2items }}"

  - name: Add CNAME records
    when: inventory_hostname == groups['dns_master'][0]
    community.general.nsupdate:
      key_name: "dns_update_key"
      key_algorithm: "hmac-sha256"
      key_secret: "{{ dns_update_key }}"
      server: "localhost"
      zone: "{{ zone }}."
      record: "{{ item.key }}.{{ zone }}."
      type: "CNAME"
      value: "{{ item.value }}.{{ zone }}."
    loop: "{{ cname_records | dict2items }}"
  #
  # - name: Start bind
  #   ansible.builtin.service:
  #       name: bind9
  #       state: started
  #       enabled: yes
